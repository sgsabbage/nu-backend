"""empty message

Revision ID: 6442f0101004
Revises: 
Create Date: 2022-10-25 15:27:00.206350

"""
import sqlalchemy as sa
import sqlalchemy_utils
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision = "6442f0101004"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "area",
        sa.Column(
            "id",
            postgresql.UUID(as_uuid=True),
            server_default=sa.text("uuid_generate_v4()"),
            nullable=False,
        ),
        sa.Column("name", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_area")),
        schema="core",
    )
    op.create_table(
        "channel",
        sa.Column(
            "id",
            postgresql.UUID(as_uuid=True),
            server_default=sa.text("uuid_generate_v4()"),
            nullable=False,
        ),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("description", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_channel")),
        schema="core",
    )
    op.create_table(
        "player",
        sa.Column(
            "id",
            postgresql.UUID(as_uuid=True),
            server_default=sa.text("uuid_generate_v4()"),
            nullable=False,
        ),
        sa.Column("username", sa.String(), nullable=True),
        sa.Column(
            "password",
            sqlalchemy_utils.types.password.PasswordType(max_length=1137),
            nullable=True,
        ),
        sa.Column("email", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_player")),
        schema="core",
    )
    op.create_table(
        "role",
        sa.Column(
            "id",
            postgresql.UUID(as_uuid=True),
            server_default=sa.text("uuid_generate_v4()"),
            nullable=False,
        ),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column(
            "permissions",
            postgresql.ARRAY(
                sa.Enum(
                    "CHANNEL_CREATE",
                    "CHANNEL_UPDATE",
                    "CHANNEL_DELETE",
                    name="permission",
                )
            ),
            nullable=True,
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_role")),
        schema="core",
    )
    op.create_table(
        "player_role",
        sa.Column("player_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("role_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["player_id"],
            ["core.player.id"],
            name=op.f("fk_player_role_player_id_player"),
        ),
        sa.ForeignKeyConstraint(
            ["role_id"], ["core.role.id"], name=op.f("fk_player_role_role_id_role")
        ),
        sa.PrimaryKeyConstraint("player_id", "role_id", name=op.f("pk_player_role")),
        schema="core",
    )
    op.create_table(
        "room",
        sa.Column(
            "id",
            postgresql.UUID(as_uuid=True),
            server_default=sa.text("uuid_generate_v4()"),
            nullable=False,
        ),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("area_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column(
            "status",
            sa.Enum("PRIVATE", "SECRET", "PUBLIC", name="roomstatus"),
            nullable=True,
        ),
        sa.Column("x", sa.Integer(), nullable=True),
        sa.Column("y", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["area_id"], ["core.area.id"], name=op.f("fk_room_area_id_area")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_room")),
        schema="core",
    )
    op.create_table(
        "character",
        sa.Column(
            "id",
            postgresql.UUID(as_uuid=True),
            server_default=sa.text("uuid_generate_v4()"),
            nullable=False,
        ),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("base_color", sa.String(), nullable=True),
        sa.Column("player_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column("current_room_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["current_room_id"],
            ["core.room.id"],
            name=op.f("fk_character_current_room_id_room"),
        ),
        sa.ForeignKeyConstraint(
            ["player_id"],
            ["core.player.id"],
            name=op.f("fk_character_player_id_player"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_character")),
        schema="core",
    )
    op.create_table(
        "exit",
        sa.Column(
            "id",
            postgresql.UUID(as_uuid=True),
            server_default=sa.text("uuid_generate_v4()"),
            nullable=False,
        ),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("secret", sa.Boolean(), nullable=True),
        sa.Column("start_room_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column("end_room_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["end_room_id"], ["core.room.id"], name=op.f("fk_exit_end_room_id_room")
        ),
        sa.ForeignKeyConstraint(
            ["start_room_id"], ["core.room.id"], name=op.f("fk_exit_start_room_id_room")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_exit")),
        schema="core",
    )
    op.create_table(
        "channel_character",
        sa.Column("channel_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("character_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["channel_id"],
            ["core.channel.id"],
            name=op.f("fk_channel_character_channel_id_channel"),
        ),
        sa.ForeignKeyConstraint(
            ["character_id"],
            ["core.character.id"],
            name=op.f("fk_channel_character_character_id_character"),
        ),
        sa.PrimaryKeyConstraint(
            "channel_id", "character_id", name=op.f("pk_channel_character")
        ),
        schema="core",
    )
    op.create_table(
        "channel_message",
        sa.Column(
            "id",
            postgresql.UUID(as_uuid=True),
            server_default=sa.text("uuid_generate_v4()"),
            nullable=False,
        ),
        sa.Column("message", sa.String(), nullable=True),
        sa.Column("character_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column("channel_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column("system", sa.Boolean(), nullable=True),
        sa.Column("timestamp", postgresql.TIMESTAMP(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["channel_id"],
            ["core.channel.id"],
            name=op.f("fk_channel_message_channel_id_channel"),
        ),
        sa.ForeignKeyConstraint(
            ["character_id"],
            ["core.character.id"],
            name=op.f("fk_channel_message_character_id_character"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_channel_message")),
        schema="core",
    )
    op.create_table(
        "character_known_room",
        sa.Column("character_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("room_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["character_id"],
            ["core.character.id"],
            name=op.f("fk_character_known_room_character_id_character"),
        ),
        sa.ForeignKeyConstraint(
            ["room_id"],
            ["core.room.id"],
            name=op.f("fk_character_known_room_room_id_room"),
        ),
        sa.PrimaryKeyConstraint(
            "character_id", "room_id", name=op.f("pk_character_known_room")
        ),
        schema="core",
    )
    op.create_table(
        "player_window",
        sa.Column(
            "id",
            postgresql.UUID(as_uuid=True),
            server_default=sa.text("uuid_generate_v4()"),
            nullable=False,
        ),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("width", sa.Integer(), nullable=True),
        sa.Column("height", sa.Integer(), nullable=True),
        sa.Column("top", sa.Integer(), nullable=True),
        sa.Column("left", sa.Integer(), nullable=True),
        sa.Column("position", sa.Integer(), nullable=True),
        sa.Column("component", sa.String(), nullable=True),
        sa.Column("player_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column("character_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["character_id"],
            ["core.character.id"],
            name=op.f("fk_player_window_character_id_character"),
        ),
        sa.ForeignKeyConstraint(
            ["player_id"],
            ["core.player.id"],
            name=op.f("fk_player_window_player_id_player"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_player_window")),
        schema="core",
    )
    op.create_table(
        "player_window_setting",
        sa.Column(
            "id",
            postgresql.UUID(as_uuid=True),
            server_default=sa.text("uuid_generate_v4()"),
            nullable=False,
        ),
        sa.Column("key", sa.String(), nullable=False),
        sa.Column("value", sa.String(), nullable=False),
        sa.Column("window_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["window_id"],
            ["core.player_window.id"],
            name=op.f("fk_player_window_setting_window_id_player_window"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_player_window_setting")),
        schema="core",
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("player_window_setting", schema="core")
    op.drop_table("player_window", schema="core")
    op.drop_table("character_known_room", schema="core")
    op.drop_table("channel_message", schema="core")
    op.drop_table("channel_character", schema="core")
    op.drop_table("exit", schema="core")
    op.drop_table("character", schema="core")
    op.drop_table("room", schema="core")
    op.drop_table("player_role", schema="core")
    op.drop_table("role", schema="core")
    op.drop_table("player", schema="core")
    op.drop_table("channel", schema="core")
    op.drop_table("area", schema="core")
    # ### end Alembic commands ###
